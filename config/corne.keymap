/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <120>;
};

&lt {
    tapping-term-ms = <120>;
};

/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none             &kp Q  &kp W             &kp E            &kp R             &kp T                 &kp Y        &kp U      &kp I    &kp O                  &kp P  &none
&none             &kp A  &ht LGUI S      &ht LALT D       &ht LCTRL F         &kp G                 &kp H  &ht RCTRL J  &ht RALT K    &ht RGUI L         &kp SEMI  &none
&none  &mt LEFT_SHIFT Z  &ht LC(X) X     &ht LC(C) C      &ht LC(V) V      &ht LC(B) B              &kp N        &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH  &none
                                         &kp TAB       &lt 1 BACKSPACE      &kp ESCAPE           &kp ENTER  &lt 2 SPACE      &mo 3
            >;
        };

        num_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp EXCLAMATION  &kp AT_SIGN  &kp POUND  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none
&none           &kp N1       &kp N2     &kp N3      &kp N4       &kp N5       &kp N6         &kp N7        &kp N8                &kp N9                 &kp N0  &none
&none           &trans     &kp BSLH  &kp MINUS   &kp EQUAL    &kp GRAVE       &trans         &trans       &kp SQT              &kp LBKT      &kp RIGHT_BRACKET  &none
                                        &trans      &trans       &trans       &trans          &mo 4        &trans
            >;
        };

        nav_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none     &trans  &trans  &trans  &trans  &trans          &kp HOME     &kp PAGE_UP  &kp PAGE_DOWN          &kp END         &trans  &none
&none  &kp LCTRL  &trans  &trans  &trans  &trans    &kp LEFT_ARROW  &kp DOWN_ARROW   &kp UP_ARROW  &kp RIGHT_ARROW  &kp RA(ENTER)  &none
&none     &trans  &trans  &trans  &trans  &trans            &trans          &trans         &trans           &trans     &kp DELETE  &none
                          &trans   &mo 4  &trans            &trans          &trans         &trans
            >;
        };

        Function {
            bindings = <
&none  &kp F1   &kp F2   &kp F3   &kp F4   &trans      &kp C_PREVIOUS    &kp C_VOLUME_UP  &kp C_BRIGHTNESS_INC     &trans  &trans  &none
&none  &kp F5   &kp F6   &kp F7   &kp F8   &trans    &kp C_PLAY_PAUSE  &kp C_VOLUME_DOWN  &kp C_BRIGHTNESS_DEC  &kp LG(L)  &trans  &none
&none  &kp F9  &kp F10  &kp F11  &kp F12  &kp F13          &kp C_NEXT         &kp C_MUTE                &trans     &trans  &trans  &none
                         &trans   &trans   &trans              &trans             &trans                &trans
            >;
        };

        Bluetooth_and_reset {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans      &trans  &trans
&trans        &trans        &trans    &bt BT_PRV    &bt BT_NXT        &trans    &trans  &trans  &trans  &trans      &trans  &trans
&trans    &bt BT_CLR        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &sys_reset  &trans
                                          &trans        &trans        &trans    &trans  &trans  &trans
            >;
        };
    };
};
